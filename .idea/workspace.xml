<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="33a971a5-e22d-493a-b1a0-31b95521b12d" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/scala/longestSubstring/LongestSubStringHintSolver.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/scala/longestSubString/TestLongestSubStringSolver.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/scala/longestSubString/TestLongestSubStringSolver.scala" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="SBT">
      <state>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="LeetCode" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="1" />
  </component>
  <component name="ProjectId" id="1n1KNGJpyU61uAB2V34bLoNgMiF" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
  </component>
  <component name="RunManager" selected="ScalaTest.TestLongestSubStringSolver.(6)longestSubStringHintSolver returns maximum length of unique substring">
    <configuration name="TestLongestSubStringSolver.(2)longestSubStringHintSolver returns maximum length of unique substring" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="LeetCode" />
      <option name="allowRunningInParallel" value="false" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="longestSubString.TestLongestSubStringSolver" />
      <option name="testName" value="(2)longestSubStringHintSolver returns maximum length of unique substring" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestLongestSubStringSolver.(3)longestSubStringHintSolver returns maximum length of unique substring" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="LeetCode" />
      <option name="allowRunningInParallel" value="false" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="longestSubString.TestLongestSubStringSolver" />
      <option name="testName" value="(3)longestSubStringHintSolver returns maximum length of unique substring" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestLongestSubStringSolver.(4)longestSubStringHintSolver returns maximum length of unique substring" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="LeetCode" />
      <option name="allowRunningInParallel" value="false" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="longestSubString.TestLongestSubStringSolver" />
      <option name="testName" value="(4)longestSubStringHintSolver returns maximum length of unique substring" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestLongestSubStringSolver.(5)longestSubStringHintSolver returns maximum length of unique substring" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="LeetCode" />
      <option name="allowRunningInParallel" value="false" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="longestSubString.TestLongestSubStringSolver" />
      <option name="testName" value="(5)longestSubStringHintSolver returns maximum length of unique substring" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestLongestSubStringSolver.(6)longestSubStringHintSolver returns maximum length of unique substring" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="LeetCode" />
      <option name="allowRunningInParallel" value="false" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="longestSubString.TestLongestSubStringSolver" />
      <option name="testName" value="(6)longestSubStringHintSolver returns maximum length of unique substring" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="ScalaTest.TestLongestSubStringSolver.(3)longestSubStringHintSolver returns maximum length of unique substring" />
      <item itemvalue="ScalaTest.TestLongestSubStringSolver.(4)longestSubStringHintSolver returns maximum length of unique substring" />
      <item itemvalue="ScalaTest.TestLongestSubStringSolver.(5)longestSubStringHintSolver returns maximum length of unique substring" />
      <item itemvalue="ScalaTest.TestLongestSubStringSolver.(2)longestSubStringHintSolver returns maximum length of unique substring" />
      <item itemvalue="ScalaTest.TestLongestSubStringSolver.(6)longestSubStringHintSolver returns maximum length of unique substring" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.TestLongestSubStringSolver.(6)longestSubStringHintSolver returns maximum length of unique substring" />
        <item itemvalue="ScalaTest.TestLongestSubStringSolver.(5)longestSubStringHintSolver returns maximum length of unique substring" />
        <item itemvalue="ScalaTest.TestLongestSubStringSolver.(4)longestSubStringHintSolver returns maximum length of unique substring" />
        <item itemvalue="ScalaTest.TestLongestSubStringSolver.(3)longestSubStringHintSolver returns maximum length of unique substring" />
        <item itemvalue="ScalaTest.TestLongestSubStringSolver.(2)longestSubStringHintSolver returns maximum length of unique substring" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="33a971a5-e22d-493a-b1a0-31b95521b12d" name="Default Changelist" comment="" />
      <created>1610552114615</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1610552114615</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="scala-line">
          <url>file://$PROJECT_DIR$/src/main/scala/longestSubstring/LongestSubStringHintSolver.scala</url>
          <line>37</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="scala-line">
          <url>file://$PROJECT_DIR$/src/main/scala/longestSubstring/LongestSubStringHintSolver.scala</url>
          <line>38</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="java.lang.Integer" memberName="value" />
      </pinned-members>
    </pin-to-top-manager>
  </component>
</project>